<launch>

    <!-- Load configuration parameters from YAML file -->
    <rosparam file="$(find quadcopter_control)/config/quadcopter_params.yaml" command="load" />

    <!-- Parametre dosyalarını yükleme -->
    <rosparam file="$(find quadcopter_control)/config/trajectory_manager.yaml" command="load"/>

    <!-- Crescent trajectory parametrelerini yükle -->
    <rosparam file="$(find quadcopter_control)/config/trajectory_crescent.yaml" command="load"/>

    <!-- Random trajectory parametrelerini yükle -->
    <rosparam file="$(find quadcopter_control)/config/trajectory_random.yaml" command="load"/>

    <!-- Random trajectory parametrelerini yükle -->
    <rosparam file="$(find quadcopter_control)/config/trajectory_random_2.yaml" command="load"/>

    <!-- Hover trajectory parametrelerini yükle -->
    <rosparam file="$(find quadcopter_control)/config/trajectory_hover.yaml" command="load"/>

    <!-- Server Node -->
    <node name="waypoint_server" pkg="quadcopter_control" type="waypoint_server" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Trajectory Node -->
    <node name="trajectory_generator" pkg="quadcopter_control" type="trajectory_generator" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Mid-Level Controller Node -->
    <node name="mid_level_cont" pkg="quadcopter_control" type="mid_level_cont" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Low-Level Controller Node -->
    <node name="low_level_cont" pkg="quadcopter_control" type="low_level_cont" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Equations of Motion (EOM) Node -->
    <node name="eom" pkg="quadcopter_control" type="eom" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Equations of Motion (EOM) Node -->
    <node name="data_logger" pkg="quadcopter_control" type="data_logger" output="screen">
        <!-- Add any necessary parameters or arguments here -->
    </node>

    <!-- Launch the path publisher node -->
    <node name="rviz_data" pkg="quadcopter_control" type="rviz_data" output="screen" />
    
    <!-- Load the URDF file into the parameter server -->
    <arg name="model" default="$(find quadcopter_control)/urdf/quad_cad.urdf"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

    <!-- RViz Node with quad_rviz.rviz Configuration -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find quadcopter_control)/rviz/quad_rviz.rviz" output="screen" />
</launch>
